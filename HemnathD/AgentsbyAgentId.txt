Agent: 

 

Agent Controller: 

Created a class of Agent Controller to access the agent details by ID. 
Created simple API for getting agent details by using agentid . 
Created a Separate Class for Response Api for getting success message or any error message. 
After the Api response Created method name as getAgentDetailsByAgentId with @pathVariable annotation and parameter od agentID as BigInteger. 
Return the getSuccessResponse from Base Controller. Importing com.wsol.agent.service.AgentService and create method for Agent Service class @Autowired annotation for connecting Service class to get the getAgentDetailsByAgentId with parameter of String of agentId 

 

 1.1 Api Response 

	Api Response class for input data should be success or else give some error. 
	Created some variables of private access modifier for Boolean as success, String as message, Object as data, error and warning. 
	Create constructor with parameter of success, data, error for getting status 400 as invalid input. 
	Create another constructor with success parameter of message for getting status 200 for accepts. 
	Create another constructor with parameter of success, Object as response, error, warning for getting status of 500 for unexpected Exceptions. 

 

	1.2 Success Response 

	Create abstract class as Base Controller that extend by agent controller from that create 3 methods of first two as getSuccessResponse ,one for response as true success and null error if empty, another one response as true success and get message. 
	Third method as getFailureResponse for getting error message when the success is false, data is null, error message.  

 

2.AgentService 

Created class of AgentService with extend of BaseSerivce in there all exception. 
Created a method of AgentInfoRequest as getAgentDetailsByAgentId with parameter of agentId as BigInteger.  

 Agents: 

It is separate class of agents for entity for getting details of agents from Database 
Import the Agents entity to the service created agents method as agent to check the for validation for agentId from agentValidationService 

Validation 

Created a class as AgentValidationService thatâ€™s extend with BaseService for exception. 
From that created a Agents method of getAgentdByID with parameter of agentId as BigInteger .
used the Optional object with agents entity  as agentsOptional for given data consiter as true or false ,its connect with agentRepository to find the agentId by using method of findByID with parameter of agentId .
simple agents as null and give if-else condition as if the given data is false by using isPresent() throw logger error message and throwServiceException or else data get and store it in the agents.
 That agent will return  
agentInfoRequest as null value . 

Given the if condition of the objects should be not null in agents. 
Then go to the AgentsMapper, its for targeting for agentId get and store it in the agentInfoRequest and return the agentInfoRequest 

 